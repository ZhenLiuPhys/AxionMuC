<LesHouchesEvents version="3.0">
<header>
<!--
#*********************************************************************
#                                                                    *
#                        MadGraph5_aMC@NLO                           *
#                                                                    *
#                           Going Beyond                             *
#                                                                    *
#                   http://madgraph.hep.uiuc.edu                     *
#                   http://madgraph.phys.ucl.ac.be                   *
#                   http://amcatnlo.cern.ch                          *
#                                                                    *
#                     The MadGraph5_aMC@NLO team                     *
#                                                                    *
#....................................................................*
#                                                                    *
# This file contains all the information necessary to reproduce      *
# the events generated:                                              *
#                                                                    *
# 1. software version                                                *
# 2. proc_card          : code generation info including model       *
# 3. param_card         : model primary parameters in the LH format  *
# 4. run_card           : running parameters (collider and cuts)     *
# 5. pythia_card        : present only if pythia has been run        *
# 6. pgs_card           : present only if pgs has been run           *
# 7. delphes_cards      : present only if delphes has been run       *
#                                                                    *
#                                                                    *
#*********************************************************************
-->
<MGVersion>
3.5.5
</MGVersion>
<MG5ProcCard>
<![CDATA[
#************************************************************
#*                     MadGraph5_aMC@NLO                    *
#*                                                          *
#*                *                       *                 *
#*                  *        * *        *                   *
#*                    * * * * 5 * * * *                     *
#*                  *        * *        *                   *
#*                *                       *                 *
#*                                                          *
#*                                                          *
#*         VERSION 3.5.5                 2024-06-17         *
#*                                                          *
#*    The MadGraph5_aMC@NLO Development Team - Find us at   *
#*    https://server06.fynu.ucl.ac.be/projects/madgraph     *
#*                                                          *
#************************************************************
#*                                                          *
#*               Command File for MadGraph5_aMC@NLO         *
#*                                                          *
#*     run as ./bin/mg5_aMC  filename                       *
#*                                                          *
#************************************************************
set group_subprocesses Auto
set ignore_six_quark_processes False
set low_mem_multicore_nlo_generation False
set complex_mass_scheme False
set include_lepton_initiated_processes False
set gauge unitary
set loop_optimized_output True
set loop_color_flows False
set max_npoint_for_channel 0
set default_unset_couplings 99
set max_t_for_channel 99
set zerowidth_tchannel True
set nlo_mixed_expansion True
import model ALP_linear_UFO_SK
define p = g u c d s u~ c~ d~ s~
define j = g u c d s u~ c~ d~ s~
define l+ = e+ mu+
define l- = e- mu-
define vl = ve vm vt
define vl~ = ve~ vm~ vt~
generate mu+ mu- > mu+ mu- ax , ax > g g WEIGHTED<=4
output mumu2mumuax
]]>
</MG5ProcCard>
<MGProcCard>
<![CDATA[
#*********************************************************************
#                        MadGraph/MadEvent                           *
#                   http://madgraph.hep.uiuc.edu                     *
#                                                                    *
#                          proc_card.dat                             *
#*********************************************************************
#                                                                    *
#            This Files is generated by MADGRAPH 5                   *
#                                                                    *
# WARNING: This Files is generated for MADEVENT (compatibility issue)*
#          This files is NOT a valid MG4 proc_card.dat               *
#          Running this in MG4 will NEVER reproduce the result of MG5*
#                                                                    *
#*********************************************************************
#*********************************************************************
# Process(es) requested : mg2 input                                  *
#*********************************************************************
# Begin PROCESS # This is TAG. Do not modify this line
mu+ mu- > mu+ mu- ax , ax > g g           #Process
# Be carefull the coupling are here in MG5 convention
WEIGHTED<=4
          
end_coup           # End the couplings input

done               # this tells MG there are no more procs
# End PROCESS  # This is TAG. Do not modify this line
#*********************************************************************
# Model information                                                  *
#*********************************************************************
# Begin MODEL  # This is TAG. Do not modify this line
ALP_linear_UFO_SK
# End   MODEL  # This is TAG. Do not modify this line
#*********************************************************************
# Start multiparticle definitions                                    *
#*********************************************************************
# Begin MULTIPARTICLES # This is TAG. Do not modify this line

# End  MULTIPARTICLES # This is TAG. Do not modify this line
]]>
</MGProcCard>
<MGRunCard>
<![CDATA[
#*********************************************************************
#                       MadGraph5_aMC@NLO                            *
#                                                                    *
#                     run_card.dat MadEvent                          *
#                                                                    *
#  This file is used to set the parameters of the run.               *
#                                                                    *
#  Some notation/conventions:                                        *
#                                                                    *
#   Lines starting with a '# ' are info or comments                  *
#                                                                    *
#   mind the format:   value    = variable     ! comment             *
#                                                                    *
#   To display more options, you can type the command:               *
#      update to_full                                                *
#*********************************************************************
#                                                                    
#*********************************************************************
# Tag name for the run (one word)                                    *
#*********************************************************************
  signal	= run_tag ! name of the run 
#*********************************************************************
# Number of events and rnd seed                                      *
# Warning: Do not generate more than 1M events in a single run       *
#*********************************************************************
  10000	= nevents ! Number of unweighted events requested 
 39 = iseed ! rnd seed (0=assigned automatically=default))
#*********************************************************************
# Collider type and energy                                           *
# lpp: 0=No PDF, 1=proton, -1=antiproton,                            *
#                2=elastic photon of proton/ion beam                 *
#             +/-3=PDF of electron/positron beam                     *
#             +/-4=PDF of muon/antimuon beam                         *
#*********************************************************************
  0	= lpp1 ! beam 1 type 
  0	= lpp2 ! beam 2 type
  5000.0	= ebeam1 ! beam 1 total energy in GeV
  5000.0	= ebeam2 ! beam 2 total energy in GeV
#*********************************************************************
# Beam polarization from -100 (left-handed) to 100 (right-handed)    *
#*********************************************************************
  0.0	= polbeam1 ! beam polarization for beam 1
  0.0	= polbeam2 ! beam polarization for beam 2


#*********************************************************************
# PDF CHOICE: this automatically fixes alpha_s and its evol.         *
# pdlabel: lhapdf=LHAPDF (installation needed) [1412.7420]           *
#          iww=Improved Weizsaecker-Williams Approx.[hep-ph/9310350] *
#          eva=Effective W/Z/A Approx.       [2111.02442]            *
#          edff=EDFF in gamma-UPC            [eq.(11) in 2207.03012] *
#          chff=ChFF in gamma-UPC            [eq.(13) in 2207.03012] *
#          none=No PDF, same as lhapdf with lppx=0                   *
#*********************************************************************
     none    = pdlabel1     ! PDF type for beam #1
     none    = pdlabel2     ! PDF type for beam #2
  230000	= lhaid ! if pdlabel=lhapdf, this is the lhapdf number
# To see heavy ion options: type "update ion_pdf"
#*********************************************************************
# Renormalization and factorization scales                           *
#*********************************************************************
  False	= fixed_ren_scale ! if .true. use fixed ren scale
  False	= fixed_fac_scale ! if .true. use fixed fac scale
  91.188	= scale ! fixed ren scale
  91.188	= dsqrt_q2fact1 ! fixed fact scale for pdf1
  91.188	= dsqrt_q2fact2 ! fixed fact scale for pdf2
  -1	= dynamical_scale_choice ! Choose one of the preselected dynamical choices
  1.0	= scalefact ! scale factor for event-by-event scales

 
#*********************************************************************
# Type and output format
#*********************************************************************
  False	= gridpack !True = setting up the grid pack
  -1.0	= time_of_flight ! threshold (in mm) below which the invariant livetime is not written (-1 means not written)
  average	= event_norm ! average/sum. Normalization of the weight in the LHEF
# To see MLM/CKKW  merging options: type "update MLM" or "update CKKW"

#*********************************************************************
#
#*********************************************************************
# Phase-Space Optimization strategy (basic options)
#*********************************************************************
  0	= nhel ! using helicities importance sampling or not.
                             ! 0: sum over helicity, 1: importance sampling
  2	= sde_strategy ! default integration strategy (hep-ph/2021.00773)
                             ! 1 is old strategy (using amp square)
			     ! 2 is new strategy (using only the denominator)
#*********************************************************************
# Phase-Space Optim (advanced)
#*********************************************************************
   0 = job_strategy ! see appendix of 1507.00020 (page 26)
   4 =  hard_survey ! force to have better estimate of the integral at survey for difficult mode like interference
   -1.0 = tmin_for_channel ! limit the non-singular reach of --some-- channel of integration related to T-channel diagram (value between -1 and 0), -1 is no impact
   -1 = survey_splitting ! for loop-induced control how many core are used at survey for the computation of a single iteration.
   2 = survey_nchannel_per_job ! control how many Channel are integrated inside a single job on cluster/multicore
   -1 = refine_evt_by_job ! control the maximal number of events for the first iteration of the refine (larger means less jobs)
#*********************************************************************
# Compilation flag. No automatic re-compilation (need manual "make clean" in Source)
#*********************************************************************   
   -O = global_flag ! fortran optimization flag use for the all code.
     = aloha_flag ! fortran optimization flag for aloha function. Suggestions: '-ffast-math'
    = matrix_flag ! fortran optimization flag for matrix.f function. Suggestions: '-O3'
			     
#*********************************************************************
# Customization (custom cuts/scale/bias/...)                         *
# list of files containing fortran function that overwrite default   *
#*********************************************************************
  	= custom_fcts ! List of files containing user hook function
#*******************************                                                 
# Parton level cuts definition *
#*******************************
  0.0	= dsqrt_shat ! minimal shat for full process
#                                                                    
#
#*********************************************************************
# BW cutoff (M+/-bwcutoff*Gamma) ! Define on/off-shell for "$" and decay  
#*********************************************************************
  15.0	= bwcutoff ! (M+/-bwcutoff*Gamma)
 #*********************************************************************
 # Apply pt/E/eta/dr/mij/kt_durham cuts on decay products or not
 # (note that etmiss/ptll/ptheavy/ht/sorted cuts always apply)
 #*********************************************************************
  True	= cut_decays ! Cut decay products 
#*********************************************************************
# Standard Cuts                                                      *
#*********************************************************************
# Minimum and maximum pt's (for max, -1 means no cut)                *
#*********************************************************************
  20.0	= ptj ! minimum pt for the jets 
  -1.0	= ptl ! minimum pt for the charged leptons 
  -1.0	= ptjmax ! maximum pt for the jets
  -1.0	= ptlmax ! maximum pt for the charged leptons
  {}	= pt_min_pdg ! pt cut for other particles (use pdg code). Applied on particle and anti-particle
  {}	= pt_max_pdg ! pt cut for other particles (syntax e.g. {6: 100, 25: 50}) 
#*********************************************************************
# Minimum and maximum E's (in the center of mass frame)              *
#*********************************************************************
  0.0	= ej ! minimum E for the jets
  0.0	= eb ! minimum E for the b
  0.0	= ea ! minimum E for the photons
  0.0	= el ! minimum E for the charged leptons
  -1.0	= ejmax ! maximum E for the jets
  -1.0	= ebmax ! maximum E for the b
  -1.0	= eamax ! maximum E for the photons
  -1.0	= elmax ! maximum E for the charged leptons
  {}	= e_min_pdg ! E cut for other particles (use pdg code). Applied on particle and anti-particle
  {}	= e_max_pdg ! E cut for other particles (syntax e.g. {6: 100, 25: 50})

#*********************************************************************
# Maximum and minimum absolute rapidity (for max, -1 means no cut)   *
#*********************************************************************
  5.0	= etaj ! max rap for the jets 
  -1.0	= etal ! max rap for the charged leptons 
  0.0	= etalmin ! min rap for the charged leptons
  {}	= eta_min_pdg ! rap cut for other particles (use pdg code). Applied on particle and anti-particle
  {}	= eta_max_pdg ! rap cut for other particles (syntax e.g. {6: 2.5, 23: 5})
#*********************************************************************
# Minimum and maximum DeltaR distance                                *
#*********************************************************************
  0.4	= drjj ! min distance between jets 
  0.4	= drll ! min distance between leptons 
  0.4	= drjl ! min distance between jet and lepton 
  -1.0	= drjjmax ! max distance between jets
  -1.0	= drllmax ! max distance between leptons
  -1.0	= drjlmax ! max distance between jet and lepton
#*********************************************************************
# Minimum and maximum invariant mass for pairs                       *
#*********************************************************************
  0.0	= mmjj ! min invariant mass of a jet pair 
  0.0	= mmll ! min invariant mass of l+l- (same flavour) lepton pair
  -1.0	= mmjjmax ! max invariant mass of a jet pair
  -1.0	= mmllmax ! max invariant mass of l+l- (same flavour) lepton pair
  {}	= mxx_min_pdg ! min invariant mass of a pair of particles X/X~ (e.g. {6:250})
  {'default': False}	= mxx_only_part_antipart ! if True the invariant mass is applied only 
                       ! to pairs of particle/antiparticle and not to pairs of the same pdg codes.  
 #*********************************************************************
 # Minimum and maximum invariant mass for all letpons                 *
 #*********************************************************************
  0.0	= mmnl ! min invariant mass for all letpons (l+- and vl) 
  -1.0	= mmnlmax ! max invariant mass for all letpons (l+- and vl) 
 #*********************************************************************
 # Minimum and maximum pt for 4-momenta sum of leptons / neutrino     *
 #  for pair of lepton includes only same flavor, opposite charge
 #*********************************************************************
  0.0	= ptllmin ! Minimum pt for 4-momenta sum of leptons(l and vl)
  -1.0	= ptllmax ! Maximum pt for 4-momenta sum of leptons(l and vl)
#*********************************************************************
# Inclusive cuts                                                     *
#*********************************************************************
  0.0	= xptj ! minimum pt for at least one jet  
  0.0	= xptl ! minimum pt for at least one charged lepton 
 #*********************************************************************
 # Control the pt's of the jets sorted by pt                          *
 #*********************************************************************
  0.0	= ptj1min ! minimum pt for the leading jet in pt
  0.0	= ptj2min ! minimum pt for the second jet in pt
  -1.0	= ptj1max ! maximum pt for the leading jet in pt 
  -1.0	= ptj2max ! maximum pt for the second jet in pt
  0	= cutuse ! reject event if fails any (0) / all (1) jet pt cuts
 #*********************************************************************
 # Control the pt's of leptons sorted by pt                           *
 #*********************************************************************
  0.0	= ptl1min ! minimum pt for the leading lepton in pt
  0.0	= ptl2min ! minimum pt for the second lepton in pt
  -1.0	= ptl1max ! maximum pt for the leading lepton in pt 
  -1.0	= ptl2max ! maximum pt for the second lepton in pt
 #*********************************************************************
 # Control the Ht(k)=Sum of k leading jets                            *
 #*********************************************************************
  0.0	= htjmin ! minimum jet HT=Sum(jet pt)
  -1.0	= htjmax ! maximum jet HT=Sum(jet pt)
  0.0	= ihtmin !inclusive Ht for all partons (including b)
  -1.0	= ihtmax !inclusive Ht for all partons (including b)
 #*********************************************************************
 # WBF cuts                                                           *
 #*********************************************************************
  0.0	= xetamin ! minimum rapidity for two jets in the WBF case  
  0.0	= deltaeta ! minimum rapidity for two jets in the WBF case 
#*********************************************************************
# maximal pdg code for quark to be considered as a light jet         *
# (otherwise b cuts are applied)                                     *
#*********************************************************************
  4	= maxjetflavor ! Maximum jet pdg code
#*********************************************************************
#
#*********************************************************************
# Store info for systematics studies                                 *
# WARNING: Do not use for interference type of computation           *
#*********************************************************************
  False	= use_syst ! Enable systematics studies
#
  systematics	= systematics_program ! none, systematics [python], SysCalc [depreceted, C++]
  ['--mur=0.5,1,2', '--muf=0.5,1,2', '--pdf=errorset']	= systematics_arguments ! see: https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/Systematics#Systematicspythonmodule
]]>
</MGRunCard>
<slha>
######################################################################
## PARAM_CARD AUTOMATICALY GENERATED BY MG5                       ####
######################################################################
###################################
## INFORMATION FOR ALPPARS
###################################
BLOCK ALPPARS # 
      1 1.000000e+03 # fa
      2 4.695100e-03 # cgtil
      3 1.350000e-03 # cwtil
      4 4.058000e-04 # cbtil
      5 0.000000e+00 # caphi
###################################
## INFORMATION FOR CKMBLOCK
###################################
BLOCK CKMBLOCK # 
      1 2.277360e-01 # cabi
###################################
## INFORMATION FOR MASS
###################################
BLOCK MASS # 
      1 5.040000e-03 # md
      2 2.550000e-03 # mu
      3 1.010000e-01 # ms
      4 1.270000e+00 # mc
      5 4.700000e+00 # mb
      6 1.720000e+02 # mt
      11 5.110000e-04 # me
      13 1.056600e-01 # mmu
      15 1.777000e+00 # mta
      23 9.118760e+01 # mz
      25 1.250000e+02 # mh
      9000005 1.000000e+03 # ma
      12 0.000000e+00 # ve : 0.0
      14 0.000000e+00 # vm : 0.0
      16 0.000000e+00 # vt : 0.0
      21 0.000000e+00 # g : 0.0
      22 0.000000e+00 # a : 0.0
      24 7.982436e+01 # w+ : cmath.sqrt(mz__exp__2/2. + cmath.sqrt(mz__exp__4/4. - (aew*cmath.pi*mz__exp__2)/(gf*sqrt__2)))
###################################
## INFORMATION FOR SMINPUTS
###################################
BLOCK SMINPUTS # 
      1 1.279000e+02 # aewm1
      2 1.166370e-05 # gf
      3 1.184000e-01 # as (note that parameter not used if you use a pdf set)
###################################
## INFORMATION FOR YUKAWA
###################################
BLOCK YUKAWA # 
      1 5.040000e-03 # ymdo
      2 2.550000e-03 # ymup
      3 1.010000e-01 # yms
      4 1.270000e+00 # ymc
      5 4.700000e+00 # ymb
      6 1.720000e+02 # ymt
      11 5.110000e-04 # yme
      13 1.056600e-01 # ymm
      15 1.777000e+00 # ymtau
###################################
## INFORMATION FOR QNUMBERS 9000005
###################################
BLOCK QNUMBERS 9000005 #         ax
      1 0 # 3 times electric charge
      2 1 # number of spin states (2s+1)
      3 1 # colour rep (1: singlet, 3: triplet, 8: octet)
      4 0 # particle/antiparticle distinction (0=own anti)
#
#*************************
#      Decay widths      *
#*************************
#
#      PDG        Width
DECAY  1   0.000000e+00
#
#      PDG        Width
DECAY  2   0.000000e+00
#
#      PDG        Width
DECAY  3   0.000000e+00
#
#      PDG        Width
DECAY  4   0.000000e+00
#
#      PDG        Width
DECAY  5   0.000000e+00
#
#      PDG        Width
DECAY  6   1.508336e+00
#
#      PDG        Width
DECAY  11   0.000000e+00
#
#      PDG        Width
DECAY  12   0.000000e+00
#
#      PDG        Width
DECAY  13   0.000000e+00
#
#      PDG        Width
DECAY  14   0.000000e+00
#
#      PDG        Width
DECAY  15   0.000000e+00
#
#      PDG        Width
DECAY  16   0.000000e+00
#
#      PDG        Width
DECAY  21   0.000000e+00
#
#      PDG        Width
DECAY  22   0.000000e+00
#
#      PDG        Width
DECAY  23   2.495200e+00
#
#      PDG        Width
DECAY  24   2.085000e+00
#
#      PDG        Width
DECAY  25   4.070000e-03
#
#      PDG        Width
DECAY  9000005   1.446515e-02
#  BR             NDA  ID1    ID2   ...
   9.701679e-01   2    21  21 # 0.014033623350125356
   1.929060e-02   2    -24  24 # 0.0002790414031225006
   6.669322e-03   2    23  23 # 9.647273526839705e-05
   2.158998e-03   2    22  22 # 3.123022089145537e-05
   1.713179e-03   2    22  23 # 2.4781383058814847e-05
</slha>
<MGPythiaCard>
<![CDATA[
!
! It is possible to run this card manually with:
!    LD_LIBRARY_PATH=/mnt/e/Madgraph/MG5_aMC_v3_4_0/HEPTools/lib:$LD_LIBRARY_PATH /mnt/e/Madgraph/MG5_aMC_v3_4_0/HEPTools/MG5aMC_PY8_interface/MG5aMC_PY8_interface signal_pythia8.cmd
!
!
! Pythia8 cmd card automatically generated by MadGraph5_aMC@NLO
! For more information on the use of the MG5aMC / Pythia8 interface, visit
!    https://cp3.irmp.ucl.ac.be/projects/madgraph/wiki/LOPY8Merging
!
! ==================
! General parameters 
! ==================
!
Main:numberOfEvents      = -1
!
! -------------------------------------------------------------------
! Specify the HEPMC output of the Pythia8 shower. You can set it to:
!   hepmc       : MG5aMC will automatically place it the run_<i> directory
!   hepmc.gz    : Same as 'hepmc', but also will compress the output file.
!   hepmcremove : MG5aMC will automatically remove the file at the end of the run.
!                 (usefull when running with Delphes)
!   hepmc@<hepmc_path> :
!                 User defined path where the HEPMC file must written. It will
!                 therefore not be placed in the run_<i> directory. The
!                 specified path, if not absolute, will be relative to
!                 the Event/run_<i> directory of the process output.
!   /dev/null : to turn off the HEPMC output.
!   fifo      : to have MG5aMC setup the piping of the PY8 output to 
!               analysis tools such as MadAnalysis5.  
!   fifo@<fifo_path> :
!               Same as 'fifo', but selecting a custom path to create the
!               fifo pipe. (useful to select a mounted drive that supports 
!               fifo). Note that the fifo file extension *must* be '.hepmc.fifo'.
! -------------------------------------------------------------------
!
HEPMCoutput:file         = signal_pythia8_events.hepmc
!
! --------------------------------------------------------------------
! Parameters relevant only when performing MLM merging, which can be
! turned on by setting ickkw to '1' in the run_card and chosing a 
! positive value for the parameter xqcut.
! For details, see section 'Jet Matching' on the left-hand menu of 
!    http://home.thep.lu.se/~torbjorn/pythia81html/Welcome.html
! --------------------------------------------------------------------
! If equal to -1.0, MadGraph5_aMC@NLO will set it automatically based 
! on the parameter 'xqcut' of the run_card.dat 
! The following parameter was forced to be commented out by MG5aMC.
! JetMatching:qCut         = -1.0
! Use default kt-MLM to match parton level jets to those produced by the
! shower. But the other Shower-kt scheme is available too with this option.
! The following parameter was forced to be commented out by MG5aMC.
! JetMatching:doShowerKt   = off
! A value of -1 means that it is automatically guessed by MadGraph.
! It is however always safer to explicitly set it.
! The following parameter was forced to be commented out by MG5aMC.
! JetMatching:nJetMax      = -1
!
! --------------------------------------------------------------------
! Parameters relevant only when performing CKKW-L merging, which can
! be turned on by setting the parameter 'ptlund' *or* 'ktdurham' to
! a positive value. 
! For details, see section 'CKKW-L Merging' on the left-hand menu of 
!    http://home.thep.lu.se/~torbjorn/pythia81html/Welcome.html
! --------------------------------------------------------------------
! Central merging scale values you want to be used.
! If equal to -1.0, then MadGraph5_aMC@NLO will set this automatically
! based on the parameter 'ktdurham' of the run_card.dat
! The following parameter was forced to be commented out by MG5aMC.
! Merging:TMS              = -1.0
! This must be set manually, according to Pythia8 directives.
! An example of possible value is 'pp>LEPTONS,NEUTRINOS'
! Alternatively, from Pythia v8.223 onwards, the value 'guess' can be 
! used to instruct Pythia to guess the hard process. The guess would mean 
! that all particles apart from light partons will be considered as a part 
! of the hard process. This guess is prone to errors if the desired hard 
! process is complicated (i.e. contains light partons). The user should
! then be wary of suspicious error messages in the Pythia log file. 
! The following parameter was forced to be commented out by MG5aMC.
! Merging:Process          = <set_by_user>
! A value of -1 means that it is automatically guessed by MadGraph.
! It is however always safer to explicitly set it.
! The following parameter was forced to be commented out by MG5aMC.
! Merging:nJetMax  		 = -1
!
! For all merging schemes, decide whehter you want the merging scale
! variation computed for only the central weights or all other 
! PDF and scale variation weights as well
SysCalc:fullCutVariation = off
!
! ==========================
! User customized parameters 
! ==========================
!
! By default, Pythia8 generates multi-parton interaction events. This is
! often irrelevant for phenomenology and very slow. You can turn this 
! feature off by uncommenting the line below if so desired.
!partonlevel:mpi = off
PartonShowers:model = 1
!
! Additional technical parameters set by MG5_aMC.
!
! Tell Pythia8 that an LHEF input is used.
Beams:frameType=4
! 1.0 corresponds to HEPMC weight given in [mb]. We choose here the [pb] normalization.
HEPMCoutput:scaling=1.0000000000e+09
! Be more forgiving with momentum mismatches.
Check:epTolErr=1.0000000000e-02
JetMatching:etaJetMax=1.0000000000e+03
! Specify one must read inputs from the MadGraph banner.
JetMatching:setMad=off
! 
!     ====================
!     Subrun definitions
!     ====================
!     
LHEFInputs:nSubruns=1
Main:subrun=0
!
!  Definition of subrun 0
!
Beams:LHEF=unweighted_events.lhe.gz
]]>
</MGPythiaCard>
<MGDelphesCard>
<![CDATA[
#######################################
# Muon Collider Detector TARGET model
#
# Michele Selvaggi michele.selvaggi@cern.ch
# Ulrike Schnoor ulrike.schnoor@cern.ch
#
#
# !!! DISCLAIMER !!!
#
# The parameterisation of the Muon Collider
# has to be intended as a target performance.
# This has not been validated by full simulation.
# Hybrid between FCC-hh and CLIC performance.
#
#
#######################################

#######################################
# Order of execution of various modules
#######################################

set ExecutionPath {
    ParticlePropagator
    TrackMergerProp

    DenseProp
    DenseMergeTracks
    DenseTrackFilter

    ChargedHadronTrackingEfficiency
    ElectronTrackingEfficiency
    MuonTrackingEfficiency
    ForwardMuonEfficiency

    ChargedHadronMomentumSmearing
    ElectronMomentumSmearing
    MuonMomentumSmearing
    ForwardMuonMomentumSmearing

    TrackMerger

    ECal
    HCal

    Calorimeter
    EFlowMerger
    EFlowFilter

    PhotonEfficiency
    PhotonIsolation

    ElectronFilter
    ElectronEfficiency
    ElectronIsolation

    ChargedHadronFilter

    MuonEfficiency
    MuonIsolation

    UniqueObjectFinder

    NeutrinoFilter
    GenJetFinder


    FastJetFinderKt
    

    MissingET
    GenMissingET


    ScalarHT

    TreeWriter
}

#################################
# Propagate particles in cylinder
#################################

module ParticlePropagator ParticlePropagator {
    set InputArray Delphes/stableParticles

    set OutputArray stableParticles
    set ChargedHadronOutputArray chargedHadrons
    set ElectronOutputArray electrons
    set MuonOutputArray muons

    # radius of the magnetic field coverage in the calorimeter, in m
    set Radius 1.5
    # half-length of the magnetic field coverage in the calorimeter, in m
    set HalfLength 2.31

    # magnetic field, in T
    set Bz 4.0
}


##############
# Track merger
##############

module Merger TrackMergerProp {
# add InputArray InputArray
  add InputArray ParticlePropagator/chargedHadrons
  add InputArray ParticlePropagator/electrons
  add InputArray ParticlePropagator/muons
  set OutputArray tracks
}



####################################
# Track propagation to pseudo-pixel
####################################

module ParticlePropagator DenseProp {

  set InputArray TrackMergerProp/tracks

  # radius of the magnetic field coverage, in m
  set Radius 0.45
  set RadiusMax 1.5
  # half-length of the magnetic field coverage, in m
  set HalfLength 0.8
  set HalfLengthMax 2.31

  # magnetic field
  set Bz 4.0
}

#####################
# Dense Track merger
#####################

module Merger DenseMergeTracks {
# add InputArray InputArray
  add InputArray DenseProp/chargedHadrons
  add InputArray DenseProp/electrons
  add InputArray DenseProp/muons
  set OutputArray tracks
}


######################
#   Dense Track Filter
######################

module DenseTrackFilter DenseTrackFilter {

  set TrackInputArray DenseMergeTracks/tracks

  set TrackOutputArray tracks
  set ChargedHadronOutputArray chargedHadrons
  set ElectronOutputArray electrons
  set MuonOutputArray muons

  set EtaPhiRes 0.003
  set EtaMax 2.5

  set pi [expr {acos(-1)}]

  set nbins_phi [expr {$pi/$EtaPhiRes} ]
  set nbins_phi [expr {int($nbins_phi)} ]

  set PhiBins {}
  for {set i -$nbins_phi} {$i <= $nbins_phi} {incr i} {
    add PhiBins [expr {$i * $pi/$nbins_phi}]
  }

  set nbins_eta [expr {$EtaMax/$EtaPhiRes} ]
  set nbins_eta [expr {int($nbins_eta)} ]

  for {set i -$nbins_eta} {$i <= $nbins_eta} {incr i} {
    set eta [expr {$i * $EtaPhiRes}]
    add EtaPhiBins $eta $PhiBins
  }
}




####################################
# Charged hadron tracking efficiency
####################################

module Efficiency ChargedHadronTrackingEfficiency {
    set InputArray DenseTrackFilter/chargedHadrons
    set OutputArray chargedHadrons
    # tracking efficiency formula for charged hadrons

    set EfficiencyFormula { (pt <= 0.5) * (0.00) +
    (abs(eta) <= 2.0) * (pt > 0.5 && pt <= 1) * (0.90) +
    (abs(eta) <= 2.0) * (pt > 1) * (0.95) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 0.5 && pt <= 1) * (0.80) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 1.0) * (0.85) +
    (abs(eta) > 2.5) * (0.00)
   }
}

##############################
# Electron tracking efficiency
##############################

module Efficiency ElectronTrackingEfficiency {
    set InputArray DenseTrackFilter/electrons
    set OutputArray electrons

    set EfficiencyFormula { (pt <= 0.5) * (0.00) +
    (abs(eta) <= 2.0) * (pt > 0.5 && pt <= 1) * (0.90) +
    (abs(eta) <= 2.0) * (pt > 1) * (0.95) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 0.5 && pt <= 1) * (0.80) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 1.0) * (0.85) +
    (abs(eta) > 2.5) * (0.00)
   }
}

##########################
# Muon tracking efficiency
##########################

module Efficiency MuonTrackingEfficiency {
    set InputArray DenseTrackFilter/muons
    set OutputArray muons

    set EfficiencyFormula { (pt <= 0.5) * (0.00) +
    (abs(eta) <= 2.0) * (pt > 0.5 && pt <= 1) * (0.95) +
    (abs(eta) <= 2.0) * (pt > 1) * (0.99) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 0.5 && pt <= 1) * (0.90) +
    (abs(eta) > 2.0 && abs(eta) < 2.5) * (pt > 1.0) * (0.95) +
    (abs(eta) > 2.5 && abs(eta) < 6)* (pt >0.5 && pt <=1) * (0.70)+
    (abs(eta) > 2.5 && abs(eta) < 6)* (pt >1.0) * (0.75)+
    (abs(eta) > 6.0) * (0.00)
   }
}

##########################
# Forward Muon efficiency
##########################

## hypothetical forward muon spectrometer
module Efficiency ForwardMuonEfficiency {
    set InputArray ParticlePropagator/muons
    set OutputArray muons

    set EfficiencyFormula { (pt <= 0.5) * (0.00) +
    (abs(eta) < 2.5 )                   * (0.00) +
    (abs(eta) > 2.5 && abs(eta) < 8.0) * (pt > 0.5 && pt <= 1) * (0.90) +
    (abs(eta) > 2.5 && abs(eta) < 8.0) * (pt > 1.0) * (0.95) +
    (abs(eta) > 8.0 ) * (0.00)
   }
}


########################################
# Momentum resolution for charged tracks
########################################

module MomentumSmearing ChargedHadronMomentumSmearing {
    set InputArray ChargedHadronTrackingEfficiency/chargedHadrons
    set OutputArray chargedHadrons


    # Resolution given in dpT/pT (from FCC-hh)
    set ResolutionFormula {    (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.00315864) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.003159 + (energy-1.000000)* 0.000007) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.003166 + (energy-2.000000)* 0.000011) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.003198 + (energy-5.000000)* 0.000012) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.003259 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004173 + (energy-100.000000)* 0.000019) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020916 + (energy-1000.000000)* 0.000021) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 10000.0000) * (0.205876*energy/10000.000000) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.00316278) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.003163 + (energy-1.000000)* 0.000006) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.003169 + (energy-2.000000)* 0.000010) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.003198 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.003255 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004165 + (energy-100.000000)* 0.000019) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020917 + (energy-1000.000000)* 0.000021) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 10000.0000) * (0.205952*energy/10000.000000) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.00320482) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.003205 + (energy-1.000000)* 0.000006) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.003211 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.003238 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.003294 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004176 + (energy-100.000000)* 0.000018) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020586 + (energy-1000.000000)* 0.000020) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 10000.0000) * (0.202528*energy/10000.000000) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.00325680) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.003257 + (energy-1.000000)* 0.000001) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.003257 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.003286 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.003342 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004195 + (energy-100.000000)* 0.000017) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.019873 + (energy-1000.000000)* 0.000019) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 10000.0000) * (0.195142*energy/10000.000000) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.00354020) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.003540 + (energy-1.000000)* -0.000201) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.003340 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.003366 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.003422 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004265 + (energy-100.000000)* 0.000017) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.019240 + (energy-1000.000000)* 0.000019) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 10000.0000) * (0.188429*energy/10000.000000) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 0.0000 && energy < 1.0000) * (0.00362672) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 1.0000 && energy < 2.0000) * (0.003627 + (energy-1.000000)* -0.000223) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 2.0000 && energy < 5.0000) * (0.003403 + (energy-2.000000)* 0.000008) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 5.0000 && energy < 10.0000) * (0.003428 + (energy-5.000000)* 0.000010) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 10.0000 && energy < 100.0000) * (0.003479 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004256 + (energy-100.000000)* 0.000016) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.018471 + (energy-1000.000000)* 0.000018) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 10000.0000) * (0.180531*energy/10000.000000) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 0.0000 && energy < 1.0000) * (0.00386864) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 1.0000 && energy < 2.0000) * (0.003869 + (energy-1.000000)* -0.000354) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 2.0000 && energy < 5.0000) * (0.003515 + (energy-2.000000)* 0.000007) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 5.0000 && energy < 10.0000) * (0.003536 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 10.0000 && energy < 100.0000) * (0.003583 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004349 + (energy-100.000000)* 0.000015) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.017442 + (energy-1000.000000)* 0.000017) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 10000.0000) * (0.169559*energy/10000.000000) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 0.0000 && energy < 1.0000) * (0.00418203) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 1.0000 && energy < 2.0000) * (0.004182 + (energy-1.000000)* -0.000556) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 2.0000 && energy < 5.0000) * (0.003626 + (energy-2.000000)* 0.000007) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 5.0000 && energy < 10.0000) * (0.003645 + (energy-5.000000)* 0.000008) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 10.0000 && energy < 100.0000) * (0.003687 + (energy-10.000000)* 0.000008) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004399 + (energy-100.000000)* 0.000013) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.016509 + (energy-1000.000000)* 0.000016) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 10000.0000) * (0.159676*energy/10000.000000) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 0.0000 && energy < 1.0000) * (0.00436103) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 1.0000 && energy < 2.0000) * (0.004361 + (energy-1.000000)* -0.000597) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 2.0000 && energy < 5.0000) * (0.003764 + (energy-2.000000)* 0.000006) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 5.0000 && energy < 10.0000) * (0.003781 + (energy-5.000000)* 0.000008) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 10.0000 && energy < 100.0000) * (0.003821 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004495 + (energy-100.000000)* 0.000012) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.015532 + (energy-1000.000000)* 0.000015) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 10000.0000) * (0.149090*energy/10000.000000) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 0.0000 && energy < 1.0000) * (0.00488279) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 1.0000 && energy < 2.0000) * (0.004883 + (energy-1.000000)* -0.000969) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 2.0000 && energy < 5.0000) * (0.003914 + (energy-2.000000)* 0.000006) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 5.0000 && energy < 10.0000) * (0.003930 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 10.0000 && energy < 100.0000) * (0.003967 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004593 + (energy-100.000000)* 0.000011) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.014592 + (energy-1000.000000)* 0.000014) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 10000.0000) * (0.138764*energy/10000.000000) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.00513716) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.005137 + (energy-1.000000)* -0.001026) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.004111 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.004125 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.004159 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004752 + (energy-100.000000)* 0.000010) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013718 + (energy-1000.000000)* 0.000013) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 10000.0000) * (0.128750*energy/10000.000000) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.00572019) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.005720 + (energy-1.000000)* -0.001362) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.004359 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.004372 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.004405 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005024 + (energy-100.000000)* 0.000010) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013902 + (energy-1000.000000)* 0.000013) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 10000.0000) * (0.129437*energy/10000.000000) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.00613558) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.006136 + (energy-1.000000)* -0.001331) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.004805 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.004818 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.004851 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005512 + (energy-100.000000)* 0.000012) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.016144 + (energy-1000.000000)* 0.000015) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 10000.0000) * (0.151739*energy/10000.000000) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.00655464) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.006555 + (energy-1.000000)* -0.001843) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.004711 + (energy-2.000000)* 0.000004) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.004724 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.004748 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005326 + (energy-100.000000)* 0.000009) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013686 + (energy-1000.000000)* 0.000012) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 10000.0000) * (0.125361*energy/10000.000000) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.00714442) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.007144 + (energy-1.000000)* -0.002674) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.004470 + (energy-2.000000)* -0.000070) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.004259 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.004287 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005101 + (energy-100.000000)* 0.000008) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.012303 + (energy-1000.000000)* 0.000011) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 10000.0000) * (0.110091*energy/10000.000000) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 0.0000 && energy < 1.0000) * (0.00680449) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 1.0000 && energy < 2.0000) * (0.006804 + (energy-1.000000)* -0.002108) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 2.0000 && energy < 5.0000) * (0.004696 + (energy-2.000000)* -0.000116) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 5.0000 && energy < 10.0000) * (0.004348 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 10.0000 && energy < 100.0000) * (0.004391 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005232 + (energy-100.000000)* 0.000007) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.011392 + (energy-1000.000000)* 0.000010) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 10000.0000) * (0.097988*energy/10000.000000) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 0.0000 && energy < 1.0000) * (0.00763793) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 1.0000 && energy < 2.0000) * (0.007638 + (energy-1.000000)* -0.003061) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 2.0000 && energy < 5.0000) * (0.004577 + (energy-2.000000)* -0.000168) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 5.0000 && energy < 10.0000) * (0.004074 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 10.0000 && energy < 100.0000) * (0.004121 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004910 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.010635 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 10000.0000) * (0.090704*energy/10000.000000) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 0.0000 && energy < 1.0000) * (0.00913948) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 1.0000 && energy < 2.0000) * (0.009139 + (energy-1.000000)* -0.004405) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 2.0000 && energy < 5.0000) * (0.004735 + (energy-2.000000)* -0.000231) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 5.0000 && energy < 10.0000) * (0.004043 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 10.0000 && energy < 100.0000) * (0.004066 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004739 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009891 + (energy-1000.000000)* 0.000008) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 10000.0000) * (0.083216*energy/10000.000000) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 0.0000 && energy < 1.0000) * (0.00956747) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 1.0000 && energy < 2.0000) * (0.009567 + (energy-1.000000)* -0.004497) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 2.0000 && energy < 5.0000) * (0.005070 + (energy-2.000000)* -0.000331) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 5.0000 && energy < 10.0000) * (0.004078 + (energy-5.000000)* 0.000004) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 10.0000 && energy < 100.0000) * (0.004100 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004682 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009157 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 10000.0000) * (0.074702*energy/10000.000000) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 0.0000 && energy < 1.0000) * (0.00964334) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 1.0000 && energy < 2.0000) * (0.009643 + (energy-1.000000)* -0.003950) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 2.0000 && energy < 5.0000) * (0.005694 + (energy-2.000000)* -0.000479) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 5.0000 && energy < 10.0000) * (0.004256 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 10.0000 && energy < 100.0000) * (0.004281 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004862 + (energy-100.000000)* 0.000004) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.008501 + (energy-1000.000000)* 0.000006) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 10000.0000) * (0.062525*energy/10000.000000) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.01045039) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.010450 + (energy-1.000000)* -0.005379) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.005072 + (energy-2.000000)* -0.000321) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.004109 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.004137 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004666 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.008951 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10000.0000) * (0.073400*energy/10000.000000) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.01046694) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.010467 + (energy-1.000000)* -0.005023) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.005444 + (energy-2.000000)* -0.000330) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.004455 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.004479 + (energy-10.000000)* 0.000004) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004883 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009382 + (energy-1000.000000)* 0.000008) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10000.0000) * (0.078852*energy/10000.000000) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.01090933) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.010909 + (energy-1.000000)* -0.005299) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.005610 + (energy-2.000000)* -0.000302) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.004704 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.004730 + (energy-10.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005146 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.010323 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10000.0000) * (0.088469*energy/10000.000000) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.01271833) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.012718 + (energy-1.000000)* -0.005764) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.006954 + (energy-2.000000)* -0.000492) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.005479 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.005495 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005774 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.011265 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10000.0000) * (0.096592*energy/10000.000000) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.01515272) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.015153 + (energy-1.000000)* -0.007272) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.007881 + (energy-2.000000)* -0.000660) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.005900 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.005914 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.006174 + (energy-100.000000)* 0.000007) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.012486 + (energy-1000.000000)* 0.000011) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10000.0000) * (0.108659*energy/10000.000000)
    }
}

###################################
# Momentum resolution for electrons
###################################

module MomentumSmearing ElectronMomentumSmearing {
    set InputArray ElectronTrackingEfficiency/electrons
    set OutputArray electrons

    # Resolution given in dpT/pT (from FCC-hh)
    set ResolutionFormula {    (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.00315864) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.003159 + (energy-1.000000)* 0.000007) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.003166 + (energy-2.000000)* 0.000011) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.003198 + (energy-5.000000)* 0.000012) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.003259 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004173 + (energy-100.000000)* 0.000019) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020916 + (energy-1000.000000)* 0.000021) + \
       (abs(eta) >= 0.0000 && abs(eta) < 0.1000) * (energy >= 10000.0000) * (0.205876*energy/10000.000000) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.00316278) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.003163 + (energy-1.000000)* 0.000006) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.003169 + (energy-2.000000)* 0.000010) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.003198 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.003255 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004165 + (energy-100.000000)* 0.000019) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020917 + (energy-1000.000000)* 0.000021) + \
       (abs(eta) >= 0.1000 && abs(eta) < 0.2000) * (energy >= 10000.0000) * (0.205952*energy/10000.000000) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.00320482) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.003205 + (energy-1.000000)* 0.000006) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.003211 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.003238 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.003294 + (energy-10.000000)* 0.000010) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004176 + (energy-100.000000)* 0.000018) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.020586 + (energy-1000.000000)* 0.000020) + \
       (abs(eta) >= 0.2000 && abs(eta) < 0.3000) * (energy >= 10000.0000) * (0.202528*energy/10000.000000) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.00325680) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.003257 + (energy-1.000000)* 0.000001) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.003257 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.003286 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.003342 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004195 + (energy-100.000000)* 0.000017) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.019873 + (energy-1000.000000)* 0.000019) + \
       (abs(eta) >= 0.3000 && abs(eta) < 0.4000) * (energy >= 10000.0000) * (0.195142*energy/10000.000000) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.00354020) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.003540 + (energy-1.000000)* -0.000201) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.003340 + (energy-2.000000)* 0.000009) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.003366 + (energy-5.000000)* 0.000011) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.003422 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004265 + (energy-100.000000)* 0.000017) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.019240 + (energy-1000.000000)* 0.000019) + \
       (abs(eta) >= 0.4000 && abs(eta) < 0.5000) * (energy >= 10000.0000) * (0.188429*energy/10000.000000) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 0.0000 && energy < 1.0000) * (0.00362672) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 1.0000 && energy < 2.0000) * (0.003627 + (energy-1.000000)* -0.000223) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 2.0000 && energy < 5.0000) * (0.003403 + (energy-2.000000)* 0.000008) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 5.0000 && energy < 10.0000) * (0.003428 + (energy-5.000000)* 0.000010) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 10.0000 && energy < 100.0000) * (0.003479 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004256 + (energy-100.000000)* 0.000016) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.018471 + (energy-1000.000000)* 0.000018) + \
       (abs(eta) >= 0.5000 && abs(eta) < 0.6000) * (energy >= 10000.0000) * (0.180531*energy/10000.000000) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 0.0000 && energy < 1.0000) * (0.00386864) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 1.0000 && energy < 2.0000) * (0.003869 + (energy-1.000000)* -0.000354) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 2.0000 && energy < 5.0000) * (0.003515 + (energy-2.000000)* 0.000007) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 5.0000 && energy < 10.0000) * (0.003536 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 10.0000 && energy < 100.0000) * (0.003583 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004349 + (energy-100.000000)* 0.000015) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.017442 + (energy-1000.000000)* 0.000017) + \
       (abs(eta) >= 0.6000 && abs(eta) < 0.7000) * (energy >= 10000.0000) * (0.169559*energy/10000.000000) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 0.0000 && energy < 1.0000) * (0.00418203) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 1.0000 && energy < 2.0000) * (0.004182 + (energy-1.000000)* -0.000556) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 2.0000 && energy < 5.0000) * (0.003626 + (energy-2.000000)* 0.000007) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 5.0000 && energy < 10.0000) * (0.003645 + (energy-5.000000)* 0.000008) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 10.0000 && energy < 100.0000) * (0.003687 + (energy-10.000000)* 0.000008) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004399 + (energy-100.000000)* 0.000013) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.016509 + (energy-1000.000000)* 0.000016) + \
       (abs(eta) >= 0.7000 && abs(eta) < 0.8000) * (energy >= 10000.0000) * (0.159676*energy/10000.000000) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 0.0000 && energy < 1.0000) * (0.00436103) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 1.0000 && energy < 2.0000) * (0.004361 + (energy-1.000000)* -0.000597) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 2.0000 && energy < 5.0000) * (0.003764 + (energy-2.000000)* 0.000006) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 5.0000 && energy < 10.0000) * (0.003781 + (energy-5.000000)* 0.000008) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 10.0000 && energy < 100.0000) * (0.003821 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004495 + (energy-100.000000)* 0.000012) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.015532 + (energy-1000.000000)* 0.000015) + \
       (abs(eta) >= 0.8000 && abs(eta) < 0.9000) * (energy >= 10000.0000) * (0.149090*energy/10000.000000) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 0.0000 && energy < 1.0000) * (0.00488279) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 1.0000 && energy < 2.0000) * (0.004883 + (energy-1.000000)* -0.000969) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 2.0000 && energy < 5.0000) * (0.003914 + (energy-2.000000)* 0.000006) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 5.0000 && energy < 10.0000) * (0.003930 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 10.0000 && energy < 100.0000) * (0.003967 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004593 + (energy-100.000000)* 0.000011) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.014592 + (energy-1000.000000)* 0.000014) + \
       (abs(eta) >= 0.9000 && abs(eta) < 1.0000) * (energy >= 10000.0000) * (0.138764*energy/10000.000000) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.00513716) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.005137 + (energy-1.000000)* -0.001026) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.004111 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.004125 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.004159 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004752 + (energy-100.000000)* 0.000010) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013718 + (energy-1000.000000)* 0.000013) + \
       (abs(eta) >= 1.0000 && abs(eta) < 1.1000) * (energy >= 10000.0000) * (0.128750*energy/10000.000000) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.00572019) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.005720 + (energy-1.000000)* -0.001362) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.004359 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.004372 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.004405 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005024 + (energy-100.000000)* 0.000010) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013902 + (energy-1000.000000)* 0.000013) + \
       (abs(eta) >= 1.1000 && abs(eta) < 1.2000) * (energy >= 10000.0000) * (0.129437*energy/10000.000000) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.00613558) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.006136 + (energy-1.000000)* -0.001331) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.004805 + (energy-2.000000)* 0.000005) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.004818 + (energy-5.000000)* 0.000007) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.004851 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005512 + (energy-100.000000)* 0.000012) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.016144 + (energy-1000.000000)* 0.000015) + \
       (abs(eta) >= 1.2000 && abs(eta) < 1.3000) * (energy >= 10000.0000) * (0.151739*energy/10000.000000) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.00655464) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.006555 + (energy-1.000000)* -0.001843) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.004711 + (energy-2.000000)* 0.000004) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.004724 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.004748 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005326 + (energy-100.000000)* 0.000009) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.013686 + (energy-1000.000000)* 0.000012) + \
       (abs(eta) >= 1.3000 && abs(eta) < 1.4000) * (energy >= 10000.0000) * (0.125361*energy/10000.000000) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.00714442) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.007144 + (energy-1.000000)* -0.002674) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.004470 + (energy-2.000000)* -0.000070) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.004259 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.004287 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005101 + (energy-100.000000)* 0.000008) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.012303 + (energy-1000.000000)* 0.000011) + \
       (abs(eta) >= 1.4000 && abs(eta) < 1.5000) * (energy >= 10000.0000) * (0.110091*energy/10000.000000) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 0.0000 && energy < 1.0000) * (0.00680449) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 1.0000 && energy < 2.0000) * (0.006804 + (energy-1.000000)* -0.002108) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 2.0000 && energy < 5.0000) * (0.004696 + (energy-2.000000)* -0.000116) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 5.0000 && energy < 10.0000) * (0.004348 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 10.0000 && energy < 100.0000) * (0.004391 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005232 + (energy-100.000000)* 0.000007) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.011392 + (energy-1000.000000)* 0.000010) + \
       (abs(eta) >= 1.5000 && abs(eta) < 1.6000) * (energy >= 10000.0000) * (0.097988*energy/10000.000000) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 0.0000 && energy < 1.0000) * (0.00763793) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 1.0000 && energy < 2.0000) * (0.007638 + (energy-1.000000)* -0.003061) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 2.0000 && energy < 5.0000) * (0.004577 + (energy-2.000000)* -0.000168) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 5.0000 && energy < 10.0000) * (0.004074 + (energy-5.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 10.0000 && energy < 100.0000) * (0.004121 + (energy-10.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004910 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.010635 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 1.6000 && abs(eta) < 1.7000) * (energy >= 10000.0000) * (0.090704*energy/10000.000000) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 0.0000 && energy < 1.0000) * (0.00913948) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 1.0000 && energy < 2.0000) * (0.009139 + (energy-1.000000)* -0.004405) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 2.0000 && energy < 5.0000) * (0.004735 + (energy-2.000000)* -0.000231) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 5.0000 && energy < 10.0000) * (0.004043 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 10.0000 && energy < 100.0000) * (0.004066 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004739 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009891 + (energy-1000.000000)* 0.000008) + \
       (abs(eta) >= 1.7000 && abs(eta) < 1.8000) * (energy >= 10000.0000) * (0.083216*energy/10000.000000) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 0.0000 && energy < 1.0000) * (0.00956747) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 1.0000 && energy < 2.0000) * (0.009567 + (energy-1.000000)* -0.004497) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 2.0000 && energy < 5.0000) * (0.005070 + (energy-2.000000)* -0.000331) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 5.0000 && energy < 10.0000) * (0.004078 + (energy-5.000000)* 0.000004) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 10.0000 && energy < 100.0000) * (0.004100 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004682 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009157 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 1.8000 && abs(eta) < 1.9000) * (energy >= 10000.0000) * (0.074702*energy/10000.000000) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 0.0000 && energy < 1.0000) * (0.00964334) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 1.0000 && energy < 2.0000) * (0.009643 + (energy-1.000000)* -0.003950) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 2.0000 && energy < 5.0000) * (0.005694 + (energy-2.000000)* -0.000479) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 5.0000 && energy < 10.0000) * (0.004256 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 10.0000 && energy < 100.0000) * (0.004281 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004862 + (energy-100.000000)* 0.000004) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.008501 + (energy-1000.000000)* 0.000006) + \
       (abs(eta) >= 1.9000 && abs(eta) < 2.0000) * (energy >= 10000.0000) * (0.062525*energy/10000.000000) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.01045039) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.010450 + (energy-1.000000)* -0.005379) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.005072 + (energy-2.000000)* -0.000321) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.004109 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10.0000 && energy < 100.0000) * (0.004137 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004666 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.008951 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10000.0000) * (0.073400*energy/10000.000000) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.01046694) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.010467 + (energy-1.000000)* -0.005023) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.005444 + (energy-2.000000)* -0.000330) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.004455 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10.0000 && energy < 100.0000) * (0.004479 + (energy-10.000000)* 0.000004) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 100.0000 && energy < 1000.0000) * (0.004883 + (energy-100.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.009382 + (energy-1000.000000)* 0.000008) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10000.0000) * (0.078852*energy/10000.000000) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.01090933) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.010909 + (energy-1.000000)* -0.005299) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.005610 + (energy-2.000000)* -0.000302) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.004704 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10.0000 && energy < 100.0000) * (0.004730 + (energy-10.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005146 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.010323 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10000.0000) * (0.088469*energy/10000.000000) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.01271833) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.012718 + (energy-1.000000)* -0.005764) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.006954 + (energy-2.000000)* -0.000492) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.005479 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10.0000 && energy < 100.0000) * (0.005495 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 100.0000 && energy < 1000.0000) * (0.005774 + (energy-100.000000)* 0.000006) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.011265 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10000.0000) * (0.096592*energy/10000.000000) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.01515272) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.015153 + (energy-1.000000)* -0.007272) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.007881 + (energy-2.000000)* -0.000660) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.005900 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10.0000 && energy < 100.0000) * (0.005914 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 100.0000 && energy < 1000.0000) * (0.006174 + (energy-100.000000)* 0.000007) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1000.0000 && energy < 10000.0000) * (0.012486 + (energy-1000.000000)* 0.000011) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10000.0000) * (0.108659*energy/10000.000000)
    }
}

###############################
# Momentum resolution for muons
###############################

module MomentumSmearing MuonMomentumSmearing {
    set InputArray MuonTrackingEfficiency/muons
    set OutputArray muons

    # Resolution given in dpT/pT.

    set ResolutionFormula {

    ( abs(eta) < 1.35 ) *

    (sqrt(0.0000364164 + (
			  3*9.06262e-8 *pt^2* cosh(
         eta)^2 *(2.82074e-7/sin(2*atan(exp(-abs(eta))))^2 + (
          504.525 *(1/400000000 + (0.117945* 1/cosh(eta)^2)/(
             pt^2 *sin(2*atan(exp(-abs(eta))))^2)))/
          sin(2*atan(exp(-abs(eta))))^2) *sin(2*atan(exp(-abs(eta))))^2)/(
       0.00516429/sin(2*atan(exp(-abs(eta))))^2 + (
        96868.8 *(1/400000000 + 5*(0.117945 * 1/cosh(eta)^2)/(
           pt^2 *sin(2*atan(exp(-abs(eta))))^2)))/
        sin(2*atan(exp(-abs(eta))))^2))

    ) +

    ( abs(eta) > 1.35 && abs(eta) < 2.00) *

    ( 1.53846*(

     (
       (energy >= 0.0000 && energy < 1.0000) * (0.00953577) +
    (energy >= 1.0000 && energy < 2.0000) * (0.009536 + (energy-1.000000)* -0.003793) +
    (energy >= 2.0000 && energy < 5.0000) * (0.005742 + (energy-2.000000)* -0.000489) +
    (energy >= 5.0000 && energy < 10.0000) * (0.004277 + (energy-5.000000)* 0.000005) +
    (energy >= 10.0000 && energy < 20.0000) * (0.004302 + (energy-10.000000)* 0.000007) +
    (energy >= 20.0000 && energy < 50.0000) * (0.004368 + (energy-20.000000)* 0.000007) +
    (energy >= 50.0000 && energy < 100.0000) * (0.004581 + (energy-50.000000)* 0.000006) +
    (energy >= 100.0000 && energy < 200.0000) * (0.004875 + (energy-100.000000)* 0.000005) +
    (energy >= 200.0000 && energy < 500.0000) * (0.005344 + (energy-200.000000)* 0.000004) +
    (energy >= 500.0000 && energy < 1000.0000) * (0.006395 + (energy-500.000000)* 0.000004) +
    (energy >= 1000.0000 && energy < 2000.0000) * (0.008441 + (energy-1000.000000)* 0.000005) +
    (energy >= 2000.0000 && energy < 5000.0000) * (0.013700 + (energy-2000.000000)* 0.000006) +
    (energy >= 5000.0000 && energy < 10000.0000) * (0.031615 + (energy-5000.000000)* 0.000006) +
    (energy >= 10000.0000) * (0.062437*energy/10000.000000)
     )


     - sqrt(0.0000364164 + (9.06262e-8 *(1.19507e-6 + 2137.54 *(1/400000000 + 0.155982/pt^2)) *pt^2)/(0.0218797 + 410407. *(1/400000000 + 0.155982/pt^2))))*abs(eta) +

    3.07692*sqrt(0.0000364164 + (9.06262e-8 *(1.19507e-6 + 2137.54 *(1/400000000 + 0.155982/pt^2)) *pt^2)/(0.0218797 + 410407. *(1/400000000 + 0.155982/pt^2)))

     - 2.07692*
     (

      (energy >= 0.0000 && energy < 1.0000) * (0.00953577) +
    (energy >= 1.0000 && energy < 2.0000) * (0.009536 + (energy-1.000000)* -0.003793) +
    (energy >= 2.0000 && energy < 5.0000) * (0.005742 + (energy-2.000000)* -0.000489) +
    (energy >= 5.0000 && energy < 10.0000) * (0.004277 + (energy-5.000000)* 0.000005) +
    (energy >= 10.0000 && energy < 20.0000) * (0.004302 + (energy-10.000000)* 0.000007) +
    (energy >= 20.0000 && energy < 50.0000) * (0.004368 + (energy-20.000000)* 0.000007) +
    (energy >= 50.0000 && energy < 100.0000) * (0.004581 + (energy-50.000000)* 0.000006) +
    (energy >= 100.0000 && energy < 200.0000) * (0.004875 + (energy-100.000000)* 0.000005) +
    (energy >= 200.0000 && energy < 500.0000) * (0.005344 + (energy-200.000000)* 0.000004) +
    (energy >= 500.0000 && energy < 1000.0000) * (0.006395 + (energy-500.000000)* 0.000004) +
    (energy >= 1000.0000 && energy < 2000.0000) * (0.008441 + (energy-1000.000000)* 0.000005) +
    (energy >= 2000.0000 && energy < 5000.0000) * (0.013700 + (energy-2000.000000)* 0.000006) +
    (energy >= 5000.0000 && energy < 10000.0000) * (0.031615 + (energy-5000.000000)* 0.000006) +
    (energy >= 10000.0000) * (0.062437*energy/10000.000000)

     )


    ) +

       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 0.0000 && energy < 1.0000) * (0.01062416) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1.0000 && energy < 2.0000) * (0.010624 + (energy-1.000000)* -0.005532) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 2.0000 && energy < 5.0000) * (0.005092 + (energy-2.000000)* -0.000326) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 5.0000 && energy < 10.0000) * (0.004115 + (energy-5.000000)* 0.000006) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10.0000 && energy < 20.0000) * (0.004143 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 20.0000 && energy < 50.0000) * (0.004209 + (energy-20.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 50.0000 && energy < 100.0000) * (0.004413 + (energy-50.000000)* 0.000005) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 100.0000 && energy < 200.0000) * (0.004681 + (energy-100.000000)* 0.000004) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 200.0000 && energy < 500.0000) * (0.005076 + (energy-200.000000)* 0.000004) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 500.0000 && energy < 1000.0000) * (0.006270 + (energy-500.000000)* 0.000005) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 1000.0000 && energy < 2000.0000) * (0.008960 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 2000.0000 && energy < 5000.0000) * (0.015510 + (energy-2000.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 5000.0000 && energy < 10000.0000) * (0.036867 + (energy-5000.000000)* 0.000007) + \
       (abs(eta) >= 2.0000 && abs(eta) < 2.1000) * (energy >= 10000.0000) * (0.073168*energy/10000.000000) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 0.0000 && energy < 1.0000) * (0.01007098) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1.0000 && energy < 2.0000) * (0.010071 + (energy-1.000000)* -0.004627) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 2.0000 && energy < 5.0000) * (0.005444 + (energy-2.000000)* -0.000322) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 5.0000 && energy < 10.0000) * (0.004478 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10.0000 && energy < 20.0000) * (0.004501 + (energy-10.000000)* 0.000006) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 20.0000 && energy < 50.0000) * (0.004558 + (energy-20.000000)* 0.000005) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 50.0000 && energy < 100.0000) * (0.004701 + (energy-50.000000)* 0.000004) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 100.0000 && energy < 200.0000) * (0.004888 + (energy-100.000000)* 0.000003) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 200.0000 && energy < 500.0000) * (0.005213 + (energy-200.000000)* 0.000004) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 500.0000 && energy < 1000.0000) * (0.006429 + (energy-500.000000)* 0.000006) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 1000.0000 && energy < 2000.0000) * (0.009343 + (energy-1000.000000)* 0.000007) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 2000.0000 && energy < 5000.0000) * (0.016410 + (energy-2000.000000)* 0.000008) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 5000.0000 && energy < 10000.0000) * (0.039265 + (energy-5000.000000)* 0.000008) + \
       (abs(eta) >= 2.1000 && abs(eta) < 2.2000) * (energy >= 10000.0000) * (0.078014*energy/10000.000000) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 0.0000 && energy < 1.0000) * (0.01095892) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1.0000 && energy < 2.0000) * (0.010959 + (energy-1.000000)* -0.005458) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 2.0000 && energy < 5.0000) * (0.005501 + (energy-2.000000)* -0.000281) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 5.0000 && energy < 10.0000) * (0.004660 + (energy-5.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10.0000 && energy < 20.0000) * (0.004686 + (energy-10.000000)* 0.000007) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 20.0000 && energy < 50.0000) * (0.004757 + (energy-20.000000)* 0.000006) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 50.0000 && energy < 100.0000) * (0.004937 + (energy-50.000000)* 0.000004) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 100.0000 && energy < 200.0000) * (0.005143 + (energy-100.000000)* 0.000004) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 200.0000 && energy < 500.0000) * (0.005505 + (energy-200.000000)* 0.000005) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 500.0000 && energy < 1000.0000) * (0.006975 + (energy-500.000000)* 0.000007) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 1000.0000 && energy < 2000.0000) * (0.010462 + (energy-1000.000000)* 0.000008) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 2000.0000 && energy < 5000.0000) * (0.018731 + (energy-2000.000000)* 0.000009) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 5000.0000 && energy < 10000.0000) * (0.045159 + (energy-5000.000000)* 0.000009) + \
       (abs(eta) >= 2.2000 && abs(eta) < 2.3000) * (energy >= 10000.0000) * (0.089830*energy/10000.000000) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 0.0000 && energy < 1.0000) * (0.01279214) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1.0000 && energy < 2.0000) * (0.012792 + (energy-1.000000)* -0.005763) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 2.0000 && energy < 5.0000) * (0.007029 + (energy-2.000000)* -0.000513) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 5.0000 && energy < 10.0000) * (0.005489 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10.0000 && energy < 20.0000) * (0.005503 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 20.0000 && energy < 50.0000) * (0.005537 + (energy-20.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 50.0000 && energy < 100.0000) * (0.005636 + (energy-50.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 100.0000 && energy < 200.0000) * (0.005773 + (energy-100.000000)* 0.000003) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 200.0000 && energy < 500.0000) * (0.006060 + (energy-200.000000)* 0.000005) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 500.0000 && energy < 1000.0000) * (0.007489 + (energy-500.000000)* 0.000007) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 1000.0000 && energy < 2000.0000) * (0.011117 + (energy-1000.000000)* 0.000009) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 2000.0000 && energy < 5000.0000) * (0.019824 + (energy-2000.000000)* 0.000009) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 5000.0000 && energy < 10000.0000) * (0.047732 + (energy-5000.000000)* 0.000009) + \
       (abs(eta) >= 2.3000 && abs(eta) < 2.4000) * (energy >= 10000.0000) * (0.094931*energy/10000.000000) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 0.0000 && energy < 1.0000) * (0.01502671) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1.0000 && energy < 2.0000) * (0.015027 + (energy-1.000000)* -0.007177) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 2.0000 && energy < 5.0000) * (0.007850 + (energy-2.000000)* -0.000651) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 5.0000 && energy < 10.0000) * (0.005898 + (energy-5.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10.0000 && energy < 20.0000) * (0.005913 + (energy-10.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 20.0000 && energy < 50.0000) * (0.005947 + (energy-20.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 50.0000 && energy < 100.0000) * (0.006039 + (energy-50.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 100.0000 && energy < 200.0000) * (0.006170 + (energy-100.000000)* 0.000003) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 200.0000 && energy < 500.0000) * (0.006485 + (energy-200.000000)* 0.000006) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 500.0000 && energy < 1000.0000) * (0.008140 + (energy-500.000000)* 0.000008) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 1000.0000 && energy < 2000.0000) * (0.012304 + (energy-1000.000000)* 0.000010) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 2000.0000 && energy < 5000.0000) * (0.022168 + (energy-2000.000000)* 0.000010) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 5000.0000 && energy < 10000.0000) * (0.053585 + (energy-5000.000000)* 0.000011) + \
       (abs(eta) >= 2.4000 && abs(eta) < 2.5000) * (energy >= 10000.0000) * (0.106635*energy/10000.000000) + \
       (abs(eta) >= 2.5000 && abs(eta) < 6.0000) * (0.10)
    }
}

###############################
# Momentum resolution for muons
###############################

module MomentumSmearing ForwardMuonMomentumSmearing {
    set InputArray ForwardMuonEfficiency/muons
    set OutputArray muons

    # Resolution given in dpT/pT assume constant 10% regardless of energy
    set ResolutionFormula {
              (abs(eta) >= 2.5 && abs(eta) < 8.0) * (0.10)                     
 }
}


##############
# Track merger
##############

module Merger TrackMerger {
    # add InputArray InputArray
    add InputArray ChargedHadronMomentumSmearing/chargedHadrons
    add InputArray ElectronMomentumSmearing/electrons
    add InputArray MuonMomentumSmearing/muons
    set OutputArray tracks
}

#############
#   ECAL
#############

module SimpleCalorimeter ECal {
    set ParticleInputArray ParticlePropagator/stableParticles
    set TrackInputArray TrackMerger/tracks

    set TowerOutputArray ecalTowers
    set EFlowTrackOutputArray eflowTracks
    set EFlowTowerOutputArray eflowPhotons

    set IsEcal true

    set EnergyMin 0.5
    set EnergySignificanceMin 1.0

    set SmearTowerCenter true

    set pi [expr {acos(-1)}]

    # lists of the edges of each tower in eta and phi
    # each list starts with the lower edge of the first tower
    # the list ends with the higher edged of the last tower

    #ECAL barrel: dphi = 0.2 degree, deta=0.003 towers up to |eta| <=1.2
    #ECAL endcaps: dphi = 0.8 degree, deta=0.02 towers up to |eta| <=2.5

    #barrel:
    #dphi = 0.2 degree towers up to eta <=1.2
    set PhiBins {}
    for {set i -900} {$i <= 900} {incr i} {
	add PhiBins [expr {$i * $pi/900.0 }]
    }
    # 0.003 unit (5x5 mm^2) in eta up to eta <=1.2
    for {set i -400} {$i <=400} {incr i} {
	set eta [expr {$i * 0.003}]
	add EtaPhiBins $eta $PhiBins
    }

    #endcaps:
    #dphi = 0.8 degree towers for 1.2 < eta <=2.5
    set PhiBins {}
    for {set i -225} {$i <= 225} {incr i} {
	add PhiBins [expr {$i * $pi/225.}]
    }
    #deta=0.02 units for 1.2 < |eta| <=2.5
    #first, from -2.5 to -1.2, there will be (1.3/0.02=)65 segments
    for {set i 1} {$i <=66} {incr i} {
	set eta [expr {-2.52 + $i * 0.02}]
	add EtaPhiBins $eta $PhiBins
    }
    #same for 1.2 to 2.5
    for  {set i 1} {$i <=66} {incr i} {
	set eta [expr {1.18 + $i*0.02}]
	add EtaPhiBins $eta $PhiBins
    }


    # default energy fractions {abs(PDG code)} {fraction of energy deposited in ECAL}

    add EnergyFraction {0} {0.0}
    # energy fractions for e, gamma and pi0
    add EnergyFraction {11} {1.0}
    add EnergyFraction {22} {1.0}
    add EnergyFraction {111} {1.0}
    # energy fractions for muon, neutrinos and neutralinos
    add EnergyFraction {12} {0.0}
    add EnergyFraction {13} {0.0}
    add EnergyFraction {14} {0.0}
    add EnergyFraction {16} {0.0}
    add EnergyFraction {1000022} {0.0}
    add EnergyFraction {1000023} {0.0}
    add EnergyFraction {1000025} {0.0}
    add EnergyFraction {1000035} {0.0}
    add EnergyFraction {1000045} {0.0}
    # energy fractions for K0short and Lambda
    add EnergyFraction {310} {0.3}
    add EnergyFraction {3122} {0.3}

    # set ECalResolutionFormula {resolution formula as a function of eta and energy}
    set ResolutionFormula {
	(abs(eta) <= 0.78 )  * sqrt(energy^2*0.01^2 + energy*0.156^2)+
	(abs(eta) > 0.78 && abs(eta) <=0.83 ) * sqrt( energy^2*0.01^2 + energy*0.175^2  ) +
	(abs(eta) <= 2.5 && abs(eta) > 0.83) * sqrt( energy^2*0.01^2 + energy*0.151^2  )}
}

#############
#   HCAL
#############

module SimpleCalorimeter HCal {
    set ParticleInputArray ParticlePropagator/stableParticles
    set TrackInputArray ECal/eflowTracks

    set TowerOutputArray hcalTowers
    set EFlowTrackOutputArray eflowTracks
    set EFlowTowerOutputArray eflowNeutralHadrons

    set IsEcal false

    set EnergyMin 1.0
    set EnergySignificanceMin 1.0

    set SmearTowerCenter true

    set pi [expr {acos(-1)}]

    # lists of the edges of each tower in eta and phi
    # each list starts with the lower edge of the first tower
    # the list ends with the higher edged of the last tower


    #HCAL barrel: dphi = 1 degree, deta= 0.02 towers up to |eta| <=0.8
    #HCAL ring: dphi = 1 degree, deta= 0.02 towers up to |eta| <=0.9
    #HCAL endcaps: dphi = 6 degree, deta = 0.1  up to |eta| <=2.5
    #HCAL cell sizes always 30x30 mm^2

    #barrel and ring:
    #dphi = 1 degree up to |eta| <=0.9
    set PhiBins {}
    for {set i -180} {$i <=180} {incr i} {
	add PhiBins [expr {$i * $pi/180.0}]
    }
    #deta= 0.02 towers up to |eta| <=0.9
    for {set i -45} {$i <=45} {incr i} {
	set eta [expr {$i * 0.02}]
	add EtaPhiBins $eta $PhiBins
    }

    #endcaps:
    # dphi = 6 degree
    set PhiBins {}
    for {set i -30} {$i <=30} {incr i} {
	add PhiBins [expr {$i * $pi/30.0}]
    }
    # deta =0.1 for 0.9 < |eta| <=2.5
    #for -2.5 to -0.9, 21 segments
    for {set i 1} {$i <=17} {incr i} {
	set eta [expr {-2.5 + $i * 0.1}]
	add EtaPhiBins $eta $PhiBins
    }
    #same for 0.9 to 2.5
    for {set i 1} {$i <=17} {incr i} {
	set eta [expr {0.8 + $i * 0.1 }]
	add EtaPhiBins $eta $PhiBins
    }

    # default energy fractions {abs(PDG code)} {Fecal Fhcal}
    add EnergyFraction {0} {1.0}
    # energy fractions for e, gamma and pi0
    add EnergyFraction {11} {0.0}
    add EnergyFraction {22} {0.0}
    add EnergyFraction {111} {0.0}
    # energy fractions for muon, neutrinos and neutralinos
    add EnergyFraction {12} {0.0}
    add EnergyFraction {13} {0.0}
    add EnergyFraction {14} {0.0}
    add EnergyFraction {16} {0.0}
    add EnergyFraction {1000022} {0.0}
    add EnergyFraction {1000023} {0.0}
    add EnergyFraction {1000025} {0.0}
    add EnergyFraction {1000035} {0.0}
    add EnergyFraction {1000045} {0.0}
    # energy fractions for K0short and Lambda
    add EnergyFraction {310} {0.7}
    add EnergyFraction {3122} {0.7}

    # set HCalResolutionFormula {resolution formula as a function of eta and energy}
    #CLICdet internal studies
    set ResolutionFormula {
	(abs(eta)<= 0.3) * sqrt(1.38^2  + energy*0.308^2  + energy^2*0.050^2) +
	 (abs(eta)<= 0.78 && abs(eta) > 0.3) * sqrt(1.25^2  + energy*0.322^2  + energy^2*0.048^2) +
	 (abs(eta)<=1.099 && abs(eta) > 0.78) * sqrt(  1.159^2 + energy*0.341^2 + energy^2*0.049^2 ) +
	 (abs(eta)<=2.5 && abs(eta)> 1.099) * sqrt( 1.09^2 + energy*0.319^2 + energy^2*0.052^2  )
	}

}

#################
# Electron filter
#################

module PdgCodeFilter ElectronFilter {
    set InputArray HCal/eflowTracks
    set OutputArray electrons
    set Invert true
    add PdgCode {11}
    add PdgCode {-11}
}

######################
# ChargedHadronFilter
######################

module PdgCodeFilter ChargedHadronFilter {
    set InputArray HCal/eflowTracks
    set OutputArray chargedHadrons

    add PdgCode {11}
    add PdgCode {-11}
    add PdgCode {13}
    add PdgCode {-13}
}



###################################################
# Tower Merger (in case not using e-flow algorithm)
###################################################

module Merger Calorimeter {
    # add InputArray InputArray
    add InputArray ECal/ecalTowers
    add InputArray HCal/hcalTowers
    add InputArray MuonMomentumSmearing/muons
    set OutputArray towers
}


####################
# Energy flow merger
####################

module Merger EFlowMerger {
    # add InputArray InputArray
    add InputArray HCal/eflowTracks
    add InputArray ECal/eflowPhotons
    add InputArray HCal/eflowNeutralHadrons
    set OutputArray eflow
}

######################
# EFlowFilter
######################

module PdgCodeFilter EFlowFilter {
  set InputArray EFlowMerger/eflow
  set OutputArray eflow

  add PdgCode {11}
  add PdgCode {-11}
  add PdgCode {13}
  add PdgCode {-13}
}


###################
# Photon efficiency
###################

module Efficiency PhotonEfficiency {
    set InputArray ECal/eflowPhotons
    set OutputArray photons

    # set EfficiencyFormula {efficiency formula as a function of eta and pt}

    # efficiency formula for photons
    set EfficiencyFormula {
	(energy < 2.0 ) * (0.000) +
	(energy >= 2.0) * (abs(eta) < 0.7)*(0.94) +
	(energy >= 2.0) * (abs(eta) >=0.7 && abs(eta) <=2.5) * (0.9)	}

}


##################
# Photon isolation
##################

module Isolation PhotonIsolation {
    set CandidateInputArray PhotonEfficiency/photons
    set IsolationInputArray EFlowMerger/eflow

    set OutputArray photons

    set DeltaRMax 0.1

    set PTMin 0.5

    set PTRatioMax 0.2
}


#####################
# Electron efficiency
#####################

module Efficiency ElectronEfficiency {
    set InputArray ElectronFilter/electrons
    set OutputArray electrons

    # set EfficiencyFormula {efficiency formula as a function of eta and pt}

    set EfficiencyFormula {
	(energy < 3.0 ) * ( 0.00 ) +
  (abs(eta) > 2.50) * ( 0.00 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (0.58 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * ( 0.7 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * ( 0.6 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.7 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.8 ) +
	( energy >=3 && energy < 8  ) * (abs(eta) <= 0.69)                    * (0.84 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (  0.6 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * ( 0.76 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * ( 0.67 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.78 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.86 ) +
	( energy >=8 && energy < 13  ) * (abs(eta) <= 0.69)                    * ( 0.88 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) > 1.95 && abs(eta) < 2.50) * (  0.6 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (  0.8 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * ( 0.68 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.84 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.88 ) +
	( energy >=13 && energy < 18  ) * (abs(eta) <= 0.69)                    * (  0.9 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (0.64 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (0.82 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * ( 0.7 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * (0.84 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.9 ) +
	( energy >=18 && energy < 23  ) * (abs(eta) <= 0.69)                    * (0.92 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) > 1.95 && abs(eta) < 2.50) * (0.64 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (0.86 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (0.74 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * (0.87 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * (0.91 ) +
	( energy >= 23 && energy < 28  ) * (abs(eta) <= 0.69)                    * (0.94 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)   * (0.67 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (0.88 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (0.78 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.9 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * (0.94 ) +
	( energy >=28 && energy < 35  ) * (abs(eta) <= 0.69)                    * (0.94 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (0.68 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * ( 0.9 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (0.86 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * (0.92 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * (0.94 ) +
	( energy >=35 && energy < 45  ) * (abs(eta) <= 0.69)                    * (0.96 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (  0.7 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * ( 0.92 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (  0.8 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.94 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.96 ) +
	( energy >=45 && energy < 80  ) * (abs(eta) <= 0.69)                    * ( 0.97 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) > 1.95 && abs(eta) < 2.50) * (0.68 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (0.96 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (0.84 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * (0.94 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * (0.98 ) +
	( energy >=80 && energy < 200  ) * (abs(eta) <= 0.69)                    * (0.98 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) > 1.95 && abs(eta) < 2.50) * ( 0.68 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * ( 0.97 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * ( 0.86 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * ( 0.96 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * ( 0.98 ) +
	( energy >=200 && energy < 400  ) * (abs(eta) <= 0.69)                    * ( 0.98 ) +
	( energy >=400  ) * (abs(eta) > 1.95 && abs(eta) < 2.50)  * (0.68 ) +
	( energy >=400  ) * (abs(eta) <= 1.95 && abs(eta) > 1.22) * (0.96 ) +
	( energy >=400  ) * (abs(eta) <= 1.22 && abs(eta) > 1.1 ) * (0.82 ) +
	( energy >=400  ) * (abs(eta) <= 1.1 && abs(eta) > 0.91 ) * (0.96 ) +
	( energy >=400  ) * (abs(eta) <= 0.91 && abs(eta) > 0.69) * (0.98 ) +
	( energy >=400  ) * (abs(eta) <= 0.69)                    * (0.98 )
    }
}

####################
# Electron isolation
####################

module Isolation ElectronIsolation {
    set CandidateInputArray ElectronEfficiency/electrons
    set IsolationInputArray EFlowMerger/eflow

    set OutputArray electrons

    set DeltaRMax 0.1

    set PTMin 0.5

    set PTRatioMax 0.2
}

#################
# Muon efficiency
#################

module Efficiency MuonEfficiency {
    set InputArray MuonMomentumSmearing/muons
    set OutputArray muons

    # set EfficiencyFormula {efficiency as a function of eta and pt}

    set EfficiencyFormula {
	(energy < 2.5 )     * (0.00) +
	(energy>=2.5  )     * (0.999)
    }
}

################
# Muon isolation
################

module Isolation MuonIsolation {
    set CandidateInputArray MuonEfficiency/muons
    set IsolationInputArray EFlowMerger/eflow

    set OutputArray muons

    set DeltaRMax 0.1

    set PTMin 0.5

    set PTRatioMax 0.2
}



###################
# Missing ET merger
###################

module Merger MissingET {
    # add InputArray InputArray
    add InputArray EFlowMerger/eflow
    set MomentumOutputArray momentum
}


##################
# Scalar HT merger
##################

module Merger ScalarHT {
    # add InputArray InputArray
    add InputArray EFlowMerger/eflow
    set EnergyOutputArray energy
}
######################
# EFlowFilter (UniqueObjectFinder)
######################
module UniqueObjectFinder UniqueObjectFinder {
    add InputArray PhotonIsolation/photons photons
    add InputArray ElectronIsolation/electrons electrons
    add InputArray MuonIsolation/muons muons
    add InputArray EFlowMerger/eflow eflow
}

#################
# Neutrino Filter
#################

module PdgCodeFilter NeutrinoFilter {

    set InputArray Delphes/stableParticles
    set OutputArray filteredParticles

    set PTMin 0.0

    add PdgCode {12}
    add PdgCode {14}
    add PdgCode {16}
    add PdgCode {-12}
    add PdgCode {-14}
    add PdgCode {-16}

}


#####################
# MC truth jet finder
#####################

module FastJetFinder GenJetFinder {
    set InputArray NeutrinoFilter/filteredParticles

    set OutputArray jets

    # algorithm: 1 CDFJetClu, 2 MidPoint, 3 SIScone, 4 kt, 5 Cambridge/Aachen, 6 antikt, 7 anti-kt with winner-take-all axis (for N-subjettiness), 8 N-jettiness, 9 Valencia
    set JetAlgorithm 9
    set ParameterR 0.5

    set JetPTMin 20.0
}

#########################
# Gen Missing ET merger
########################

module Merger GenMissingET {
    # add InputArray InputArray
    add InputArray NeutrinoFilter/filteredParticles
    set MomentumOutputArray momentum
}



############
# Jet finder
############

module FastJetFinder FastJetFinderKt {
    #  set InputArray Calorimeter/towers
    set InputArray EFlowMerger/eflow

    set OutputArray KTjets

    # algorithm: 1 CDFJetClu, 2 MidPoint, 3 SIScone, 4 kt, 5 Cambridge/Aachen, 6 antikt, 7 anti-kt with winner-take-all axis (for N-subjettiness), 8 N-jettiness, 9 Valencia
    set JetAlgorithm 4
    set ParameterR 0.5

    set JetPTMin 20.0
}





##################
# ROOT tree writer
##################

module TreeWriter TreeWriter {
    # add Branch InputArray BranchName BranchClass
    add Branch Delphes/allParticles Particle GenParticle

    add Branch GenJetFinder/jets GenJet Jet

    add Branch FastJetFinderKt/KTjets KTjet Jet



    ####

    add Branch GenMissingET/momentum GenMissingET MissingET

    add Branch TrackMerger/tracks Track Track
    add Branch Calorimeter/towers Tower Tower

    add Branch HCal/eflowTracks EFlowTrack Track
    add Branch ECal/eflowPhotons EFlowPhoton Tower
    add Branch HCal/eflowNeutralHadrons EFlowNeutralHadron Tower

    add Branch UniqueObjectFinder/photons Photon Photon
    add Branch UniqueObjectFinder/electrons Electron Electron
    add Branch UniqueObjectFinder/muons Muon Muon
    add Branch ForwardMuonMomentumSmearing/muons ForwardMuon Muon

    add Branch MissingET/momentum MissingET MissingET
    add Branch ScalarHT/energy ScalarHT ScalarHT
}
]]>
</MGDelphesCard>
<MGGenerationInfo>
#  Number of Events        :       10000
#  Integrated weight (pb)  :       1.020497405195e-05
</MGGenerationInfo>
</header>
<init>
-13 13 5.000000e+03 5.000000e+03 0 0 0 0 -4 1
1.020497e-05 2.115056e-08 1.020497e-05 1
<generator name='MadGraph5_aMC@NLO' version='3.5.5'>please cite 1405.0301 </generator>
</init>
</LesHouchesEvents>
